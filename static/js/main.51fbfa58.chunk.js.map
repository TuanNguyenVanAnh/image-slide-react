{"version":3,"sources":["oops.jpg","helper.js","App.js","reportWebVitals.js","index.js"],"names":["Fetching","id","a","url","fetch","res","blob","type","oops","ret","URL","createObjectURL","Image","props","state","image","width","height","handleClickNext","bind","handleClickPrev","handleChange","handleGoTo","data","this","setState","e","parseInt","target","value","onChange","onClick","alt","src","className","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAAe,G,MAAA,IAA0B,kCCElC,SAAeA,EAAtB,kC,4CAAO,WAAwBC,GAAxB,qBAAAC,EAAA,6DACCC,EADD,mCACmCF,EADnC,qBAEaG,MAAMD,GAFnB,cAECE,EAFD,gBAGcA,EAAIC,OAHlB,UAIe,gBADdA,EAHD,QAIMC,KAJN,yCAKQC,GALR,cAOCC,EAAMC,IAAIC,gBAAgBL,GAP3B,kBAQIG,GARJ,6C,iCCEDG,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTb,GAAI,EACJc,MAAO,EACPC,MAAO,IACPC,OAAQ,KAEZ,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBACvB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAXH,E,4FAcnB,4BAAAjB,EAAA,sEACqBF,EAAS,GAD9B,OACQuB,EADR,OAEIC,KAAKC,UAAS,SAAAX,GAAK,MAAK,CAAEC,MAAOQ,MAFrC,gD,gFAKA,SAAaG,GACTF,KAAKC,UAAS,SAAAX,GAAK,MAAK,CACpBb,GAAI0B,SAASD,EAAEE,OAAOC,a,+DAI9B,WAAiBH,GAAjB,eAAAxB,EAAA,sEACqBF,EAASwB,KAAKV,MAAMb,IADzC,OACQsB,EADR,OAEIC,KAAKC,UAAS,SAAAX,GAAK,MAAK,CAAEC,MAAOQ,MAFrC,gD,2HAKA,WAAsBG,GAAtB,eAAAxB,EAAA,yDAC0B,IAAlBsB,KAAKV,MAAMb,GADnB,wDAIIuB,KAAKC,UAAS,SAAAX,GAAK,MAAK,CAAEb,GAAIa,EAAMb,GAAK,MAJ7C,SAKqBD,EAASwB,KAAKV,MAAMb,IALzC,OAKQsB,EALR,OAMIC,KAAKC,UAAS,SAAAX,GAAK,MAAK,CAAEC,MAAOQ,MANrC,gD,2HASA,WAAsBG,GAAtB,eAAAxB,EAAA,6DACIsB,KAAKC,UAAS,SAAAX,GAAK,MAAK,CAAEb,GAAIa,EAAMb,GAAK,MAD7C,SAEqBD,EAASwB,KAAKV,MAAMb,IAFzC,OAEQsB,EAFR,OAGIC,KAAKC,UAAS,SAAAX,GAAK,MAAK,CAAEC,MAAOQ,MAHrC,gD,2EAMA,WACI,OACI,sBAAKtB,GAAG,YAAR,UACI,sBAAKA,GAAG,MAAR,UACI,kEACA,uBAAOM,KAAK,OAAON,GAAG,MAAM4B,MAAOL,KAAKV,MAAMb,GAAI6B,SAAUN,KAAKH,eACjE,wBAAQU,QAASP,KAAKF,WAAtB,0BAEJ,qBAAKU,IAAI,4BAA4B/B,GAAG,MAAMgC,IAAKT,KAAKV,MAAMC,QAC9D,sBAAKd,GAAG,UAAR,UACI,wBAAQiC,UAAU,WAAWH,QAASP,KAAKJ,gBAA3C,sBACA,wBAAQc,UAAU,WAAWH,QAASP,KAAKN,gBAA3C,4B,GAzDAiB,IAAMC,WAsEXC,MANf,WACI,OACI,cAAC,EAAD,KC1DOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.51fbfa58.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/oops.2bfad938.jpg\";","import oops from './oops.jpg';\n\nexport async function Fetching(id) {\n    let url = `https://picsum.photos/id/${id}/500/400`;\n    let res = await fetch(url);\n    let blob = await res.blob();\n    if (blob.type === 'text/plain') {\n        return oops; \n    }\n    let ret = URL.createObjectURL(blob);\n    return ret;\n}\n","import './App.css'; \nimport React from 'react'; \nimport { Fetching } from './helper';\n\nclass Image extends React.Component { \n    constructor(props) { \n        super(props); \n        this.state = { \n            id: 1, \n            image: 1,\n            width: 700,\n            height: 500\n        };\n        this.handleClickNext = this.handleClickNext.bind(this); \n        this.handleClickPrev = this.handleClickPrev.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleGoTo = this.handleGoTo.bind(this);\n    } \n\n    async componentDidMount() {\n        let data = await Fetching(1);\n        this.setState(state => ({ image: data }));\n    }\n\n    handleChange(e) {\n        this.setState(state => ({\n            id: parseInt(e.target.value)\n        }));\n    }\n\n    async handleGoTo(e) {\n        let data = await Fetching(this.state.id);\n        this.setState(state => ({ image: data }));\n    }\n\n    async handleClickPrev(e) {\n        if (this.state.id === 1) {\n            return; \n        }\n        this.setState(state => ({ id: state.id - 1 }));\n        let data = await Fetching(this.state.id);\n        this.setState(state => ({ image: data }));\n    }\n\n    async handleClickNext(e) {\n        this.setState(state => ({ id: state.id + 1 }));\n        let data = await Fetching(this.state.id);\n        this.setState(state => ({ image: data }));\n    }\n\n    render() {\n        return (\n            <div id=\"container\">\n                <div id=\"nav\">\n                    <div>From Front-End Team with &hearts;</div>\n                    <input type=\"text\" id=\"txt\" value={this.state.id} onChange={this.handleChange}/>\n                    <button onClick={this.handleGoTo}>Get Image</button>\n                </div>\n                <img alt=\"This is from lorem picsum\" id=\"img\" src={this.state.image} />\n                <div id=\"buttons\">\n                    <button className=\"btn btn1\" onClick={this.handleClickPrev}>Previous</button>\n                    <button className=\"btn btn2\" onClick={this.handleClickNext}>Next</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction App() {\n    return (\n        <Image />\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}